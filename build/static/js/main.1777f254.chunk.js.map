{"version":3,"sources":["Component/Todo.js","firebase.js","App.js","index.js"],"names":["Todo","props","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","todoprop","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","todoValue","setTodoValue","todos","setTodos","useEffect","collection","orderBy","onSnapshot","snapShot","docs","map","doc","data","todo","className","FormControl","InputLabel","htmlFor","Input","id","type","value","onChange","e","target","Button","disabled","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","index","key","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"uVA4BeA,MAlBf,SAAcC,GACZ,OACE,oCAEE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACC,EAAA,EAAD,CAAcC,QAAO,OAAUC,UAAS,UAAKP,EAAMQ,gB,QCP9CC,EAZKC,IAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,cACnBC,MAAO,2CACPC,cAAe,iBAGMC,YC8CRC,MAnDf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAqBb,OAjBAC,qBAAU,WACRjB,EAAGkB,WAAW,SACXC,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACXL,EAASK,EAASC,KAAKC,KAAI,SAACC,GAAD,OAASA,EAAIC,OAAOC,cAElD,IAYD,yBAAKC,UAAU,OACb,qDAEA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,YAApB,SACA,kBAACC,EAAA,EAAD,CACEC,GAAG,WACHC,KAAK,OACLC,MAAOrB,EACPsB,SAAU,SAACC,GAAD,OAAOtB,EAAasB,EAAEC,OAAOH,WAG3C,kBAACI,EAAA,EAAD,CACEL,KAAK,SACLM,UAAU1B,EACV2B,QAzBU,SAACJ,GACfA,EAAEK,iBACFzC,EAAGkB,WAAW,SAASwB,IAAI,CACzBhB,KAAMb,EACN8B,UAAW1C,IAASS,UAAUkC,WAAWC,oBAE3C/B,EAAa,KAoBTgC,QAAQ,YACRC,MAAM,WALR,YASA,4BACGhC,EAAMQ,KAAI,SAACG,EAAMsB,GAAP,OACT,kBAAC,EAAD,CAAMC,IAAKD,EAAOjD,SAAU2B,UC/ChCwB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,K","file":"static/js/main.1777f254.chunk.js","sourcesContent":["import {\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport React from \"react\";\r\n\r\nfunction Todo(props) {\r\n  return (\r\n    <>\r\n      {/* <li>{props.todoprop }</li> */}\r\n      <List>\r\n        <ListItem>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary={`Todo`} secondary={`${props.todoprop}`} />\r\n        </ListItem>\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyA_CXOif2rl9gYhPDwnInpZfpX_8GU_TpE\",\r\n  authDomain: \"todo-app-cp-401f7.firebaseapp.com\",\r\n  projectId: \"todo-app-cp-401f7\",\r\n  storageBucket: \"todo-app-cp-401f7.appspot.com\",\r\n  messagingSenderId: \"39446994583\",\r\n  appId: \"1:39446994583:web:89f9a92d2eb7d0bda8d3d2\",\r\n  measurementId: \"G-QFXM2Z91SP\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport default db;\r\n","import { Button, FormControl, Input, InputLabel } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport Todo from \"./Component/Todo\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\n\nfunction App() {\n  const [todoValue, setTodoValue] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"todos\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapShot) => {\n        setTodos(snapShot.docs.map((doc) => doc.data().todo));\n      });\n  }, []);\n  // 🤦‍♀️🤷‍♀️🤳\n  const addTodo = (e) => {\n    e.preventDefault(); //will prevent refreshing.\n    db.collection(\"todos\").add({\n      todo: todoValue,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setTodoValue(\"\");\n  };\n\n  return (\n    <div className='App'>\n      <h2>Welcome to Programing</h2>\n\n      <FormControl>\n        <InputLabel htmlFor='my-input'>Todo </InputLabel>\n        <Input\n          id='my-input'\n          type='text'\n          value={todoValue}\n          onChange={(e) => setTodoValue(e.target.value)}\n        />\n      </FormControl>\n      <Button\n        type='submit'\n        disabled={todoValue ? false : true}\n        onClick={addTodo}\n        variant='contained'\n        color='primary'>\n        add Todo\n      </Button>\n\n      <ul>\n        {todos.map((todo, index) => (\n          <Todo key={index} todoprop={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}